from transcribe import transcribe_audio
from structure_yandex import structure_text
from docx import Document
from datetime import datetime
import os
from dotenv import load_dotenv
load_dotenv()

# 1. –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞
text = transcribe_audio("example.mp3")  # –§—É–Ω–∫—Ü–∏—è –∏–∑ transcribe.py

# 2. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ–º
prompt = f"""–†–∞—Å–ø—Ä–µ–¥–µ–ª–∏ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º:
1. –ñ–∞–ª–æ–±—ã
2. –ê–Ω–∞–º–Ω–µ–∑
3. –î–∏–∞–≥–Ω–æ–∑
4. –ù–∞–∑–Ω–∞—á–µ–Ω–∏—è
5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

–¢–µ–∫—Å—Ç:
{text}
"""

data = structure_text(prompt)  # üîÅ —Ç–µ–ø–µ—Ä—å 'data' –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞

# 3. –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
structured_text = data.get("result", {}).get("alternatives", [{}])[0].get("message", {}).get("text", "–û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ")

# 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª—ã
timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
txt_path = f"output_{timestamp}.txt"
docx_path = f"output_{timestamp}.docx"

with open(txt_path, "w", encoding="utf-8") as f:
    f.write(structured_text)

doc = Document()
doc.add_heading("–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–∏—ë–º–∞", 0)
for line in structured_text.split("\n"):
    doc.add_paragraph(line)
doc.save(docx_path)

print(f"\n‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Ñ–∞–π–ª—ã:\n- {txt_path}\n- {docx_path}")
